#!/usr/bin/env python
from __future__ import division
from __future__ import print_function
from argparse import ArgumentParser
import csv
import os
import sys

TEMPLATE = '''package com.appspot.manup.signup.data;

import com.appspot.manup.signup.data.DataManager.Member;

import android.content.ContentValues;

/*
 * Auto generated by generate_test_data.py
 */

final class TestData
{

%s

    private static final ContentValues[] sMembers;

    static
    {
%s
    } // static

    private static ContentValues getMember(final int index)
    {
        return new ContentValues(sMembers[index]);
    } // getMember(int)

    public static ContentValues[] getMembers()
    {
        return getMembers(0, sMembers.length);
    } // getMembers()

    public static ContentValues[] getMembers(final int startIndex, final int endIndex)
    {
        final ContentValues[] copies = new ContentValues[endIndex - startIndex];
        for (int i = startIndex; i < endIndex; i++)
        {
            copies[i] = getMember(i);
        } // for
        return copies;
    } // getMembers(int, int)

} // class TestData
'''

def relpath(p):
    return os.path.join(os.path.dirname(__file__), p)

def main(argv=None):
    if argv is None:
        argv = sys.argv
    p = ArgumentParser()
    args = p.parse_args(argv[1:])

    with open(relpath('testdata.csv'), 'rU') as csv_file:
        csv_sheet = csv.reader(csv_file)
        feild_names = next(csv_sheet)
        members = []
        for i, member in enumerate(csv_sheet):
            members.append('        sMember%d = new ContentValues();' % i)
            for j, value in enumerate(member):
                if not value:
                    continue
                members.append('        sMember%d.put(Member.%s, "%s");'
                    % (i, feild_names[j], value))
            members.append('')
        m = i
        members.append('        sMembers = new ContentValues[] {')
        for i in range(m + 1):
            members.append('                sMember%d,' % i)
        members.append('        };')
        members.append('')

    declarations = []
    for i in range(m + 1):
        declarations.append(
            '    private static final ContentValues sMember%d;' % i)
    code = TEMPLATE % ('\n'.join(declarations), '\n'.join(members))

    with open(relpath('src/com/appspot/manup/signup/data/TestData.java'), 'w') \
    as out_file:
        out_file.write(code)

    print(code)
    print('Done!')

if __name__ == '__main__':
    exit(main())
